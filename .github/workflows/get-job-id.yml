name: Get Job Id
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    outputs:
      # This is useful to propagate job ID to other jobs with "needs".
      run_id: ${{ steps.get-job-id.outputs.result }}
    steps:
      - name: Dump github context
        run: echo '${{ toJSON(github) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'        
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump step context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
      - name: "Get this job's run ID"
        id: get-job-id
        uses: actions/github-script@v6
        with:
          script: |
            const core = require('@actions/core');
            const jwt = require('jsonwebtoken');
            (async function() {
                const id_token = await core.getIDToken();
                decoded = jwt.decode(id_token , {complete: true});
                core.setOutput("environment", decoded.payload.environment);
            })()
          
            // Available variables: https://github.com/actions/github-script#actionsgithub-script
            // Rest API Docs: https://docs.github.com/en/rest/actions/workflow-jobs#list-jobs-for-a-workflow-run
            // Rest JS API: https://octokit.github.io/rest.js/v18#actions-list-jobs-for-workflow-run
            console.log(context)
            const result = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            });
            console.log(result)
            const index = ${{strategy.job-index}}
            console.log('JOB_INDEX'+index)
            console.log(result.data.jobs[index])
            // Filter for "self".
            // Note: have to use hardcoded value for name, because:
            //  * the key in yaml ('build:') is not available in this data
            //  * the name of current job is not available in github/jobs context  
            return result.data.jobs[index].id

      - name: "My job ID is ${{steps.get-job-id.outputs.result}}, but also echoing it to it's usable from scripts!"
        run: >
          echo "get-job-id=${{steps.get-job-id.outputs.result}}"
      - name: "Environment name"
        run: >
          echo "${{steps.environment.outputs.environment}}"  

  use-other-job-id:
    name: Use other job
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Dump github context
        run: echo '${{ toJSON(github) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'        
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump step context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
      - name: "build job's run id is #${{ needs.build.outputs.run_id }}"
        run: >
          echo "build job's run id is ${{ needs.build.outputs.run_id }}"
