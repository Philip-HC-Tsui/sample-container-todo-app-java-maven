name: CI for sample-container-todo-app-java-maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        jdk: [ 8, 11, 16 ]
    name: Build
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'adopt'
          cache: 'maven'
      - name: Build with Maven
        run: ./mvnw clean install -DskipTests
  test:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        jdk: [ 8, 11, 16 ]
    name: Run Tests
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'adopt'
          cache: 'maven'
      - name: Run Tests with Maven
        run: ./mvnw clean test
      - name: Archive Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-result-junit
          path: target/surefire-reports/
  release:
    name: Publish - Docker Hub
    runs-on: ubuntu-latest
    env:
      REPO: tolgatakir/sample-container-todo-app-java-maven
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
          cache: 'maven'
      - name: Create artifact
        run: ./mvnw -B clean package -DskipTests
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build Docker Image
        run: docker build -t $REPO:latest -t $REPO:${GITHUB_SHA::8} .
      - name: Publish Docker Image
        run: docker push $REPO -a
